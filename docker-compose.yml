volumes:
  postgres-data:
    driver: local
  kestra-data:
    driver: local
  kestra-flows:
    driver: local
    driver_opts:
        type: none
        device: ./kestra-flows
        o: bind
  clickhouse-data:
    driver: local
  metabase-data:
    driver: local

services:
  postgres:
    image: postgres
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: kestra
      POSTGRES_USER: kestra
      POSTGRES_PASSWORD: k3str4
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 30s
      timeout: 10s
      retries: 10

  clickhouse:
    image: clickhouse/clickhouse-server:latest
    volumes:
      - clickhouse-data:/var/lib/clickhouse
      - ./clickhouse/init-clickhouse.sql:/docker-entrypoint-initdb.d/init-clickhouse.sql
    ports:
      - "8123:8123"   # HTTP interface for ClickHouse
      - "9000:9000"   # Native TCP interface for ClickHouse
    environment:
      CLICKHOUSE_DB: default
      CLICKHOUSE_USER: default
      CLICKHOUSE_PASSWORD: ""
    healthcheck:
      test: [ "CMD-SHELL", "clickhouse-client --query 'SELECT 1'" ]
      interval: 30s
      timeout: 10s
      retries: 10

  kestra:
    image: kestra/kestra:latest
    # Note that this setup with a root user is intended for development purpose.
    # Our base image runs without root, but the Docker Compose implementation needs root to access the Docker socket
    # To run Kestra in a rootless mode in production, see: https://kestra.io/docs/installation/podman-compose
    user: "root"
    command: server standalone -f /opt/kestra/flows
    volumes:
      - kestra-flows:/opt/kestra/flows
      - kestra-data:/app/storage
      - /var/run/docker.sock:/var/run/docker.sock
      - /tmp/kestra-wd:/tmp/kestra-wd
      - ./dbt:/usr/local/bin/dbt
    environment:
      KESTRA_CONFIGURATION: |
        datasources:
          postgres:
            url: jdbc:postgresql://postgres:5432/kestra
            driverClassName: org.postgresql.Driver
            username: kestra
            password: k3str4
        kestra:
          server:
            basic-auth:
              enabled: false
              username: "admin@kestra.io" # it must be a valid email address
              password: kestra
          repository:
            type: postgres
          storage:
            type: local
            local:
              base-path: "/app/storage"
          queue:
            type: postgres
          tasks:
            tmp-dir:
              path: /tmp/kestra-wd/tmp
          tutorial-flows:
            enabled: false
          url: http://localhost:8080/
    ports:
      - "8080:8080"
      - "8081:8081"
    depends_on:
      postgres:
        condition: service_healthy
      clickhouse:
        condition: service_healthy

  metabase:
    image: metabase/metabase:v0.49.3
    volumes:
      - ./metabase/ch.jar:/plugins/clickhouse.jar
    ports:
      - "3000:3000"
    depends_on:
      clickhouse:
        condition: service_healthy
      postgres_metabase:
        condition: service_healthy
    environment:
      MB_DB_TYPE: postgres
      MB_DB_DBNAME: metabase
      MB_DB_PORT: 5432
      MB_DB_USER: metabase
      MB_DB_PASS: metabase
      MB_DB_HOST: postgres_metabase

  postgres_metabase:
    image: postgres:16
    container_name: postgres_metabase
    hostname: postgres_metabase
    environment:
      POSTGRES_USER: metabase
      POSTGRES_PASSWORD: metabase
      POSTGRES_DB: metabase
    volumes:
      - metabase-data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "metabase" ]
      interval: 10s
      retries: 5
      start_period: 5s
    restart: always